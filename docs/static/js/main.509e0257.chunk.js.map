{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/Transactions.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","style","textAlign","state","action","type","transactions","payload","filter","transaction","id","initialState","uuid","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","addTransaction","deleteTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","className","IncomeExpenses","amounts","income","expense","Transaction","sign","Math","abs","onClick","Transactions","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Number","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.509e0257.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <>\n      <h2 style={{ textAlign: 'center' }}>Expense Tracker</h2>\n    </>\n  );\n};\n\nexport default Header;\n","export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport { v4 as uuid } from 'uuid';\n\n// Initial State\nconst initialState = {\n  transactions: [\n    { id: uuid(), text: 'Credit card', amount: -2000 },\n    { id: uuid(), text: 'Tax refund', amount: 30000 }\n  ]\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  const addTransaction = transaction => {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  };\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        addTransaction,\n        deleteTransaction\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n  return (\n    <div className=\"balance\">\n      <h4>Your Balance</h4>\n      <h1>${total}</h1>\n    </div>\n  );\n};\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const income = amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n  return (\n    <>\n      <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">+${income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">-${expense}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  const sign = transaction.amount < 0 ? '-' : '+';\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      {transaction.text}{' '}\n      <span>\n        {sign}${Math.abs(transaction.amount)}\n      </span>\n      <button\n        className=\"delete-btn\"\n        onClick={() => deleteTransaction(transaction.id)}\n      >\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default Transaction;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction.js';\n\nconst Transactions = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map((transaction) => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Transactions;\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { v4 as uuid } from 'uuid';\n\nconst AddTransaction = () => {\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n  const { addTransaction } = useContext(GlobalContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newTransaction = {\n      id: uuid(),\n      text,\n      amount: Number(amount)\n    };\n    addTransaction(newTransaction);\n  };\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            placeholder=\"Enter text...\"\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            placeholder=\"Enter amount...\"\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransaction;\n","import React from 'react';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport Transactions from './components/Transactions';\nimport AddTransaction from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <Transactions />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}